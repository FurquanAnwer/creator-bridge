generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String?
  email          String          @unique
  image          String?
  sessionToken   String?
  role           role            @default(NoRole)
  youtubeCreator youtubeCreator?
  youtubeEditor  youtubeEditor?
}

model youtubeEditor {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  youtubeEnvironment youtubeEnvironment[]
  createdAt DateTime @default(now())
}

model youtubeEnvironment {
  id        String         @id @default(uuid())
  ownerId   String         @unique
  owner     youtubeCreator @relation(fields: [ownerId], references: [id])
  editors   youtubeEditor[]
  createdAt DateTime       @default(now())
}

model youtubeCreator {
  id                 String               @id @default(uuid())
  userId             String               @unique
  user               User                 @relation(fields: [userId], references: [id])
  youtubeChannel     youtubeChannel[]
  sendedRequests     JoinRequest[]        @relation("Sender")
  UserYoutubeToken   UserYoutubeToken[]
  youtubeEnvironment youtubeEnvironment[]
  createdAt          DateTime             @default(now())
}

model youtubeChannel {
  id                 String         @id @default(uuid())
  ownerId            String
  owner              youtubeCreator @relation(fields: [ownerId], references: [id])
  channelId          String?
  channelTitle       String?
  channelDescription String?
  subscriberCount    Int?
  videoCount         Int?
  thumbnailUrl       String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
}

model UserYoutubeToken {
  id             String         @id @default(uuid())
  userId         String
  user           youtubeCreator @relation(fields: [userId], references: [id])
  encryptedToken String
  iv             String
  authTag        String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt
}

model JoinRequest {
  id        String         @id @default(uuid())
  senderId  String
  sender    youtubeCreator @relation("Sender", fields: [senderId], references: [id])
  requestId String
  status    JoinStatus
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

enum role {
  Creator
  Editor
  NoRole
}

enum JoinStatus {
  Pending
  Approved
  Rejected
}
